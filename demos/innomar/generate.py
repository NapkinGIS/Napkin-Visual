# /*©agpl*************************************************************************
# *                                                                              *
# * Napkin Visual – Visualisation platform for the Napkin platform               *
# * Copyright (C) 2020  Napkin AS                                                *
# *                                                                              *
# * This program is free software: you can redistribute it and/or modify         *
# * it under the terms of the GNU Affero General Public License as published by  *
# * the Free Software Foundation, either version 3 of the License, or            *
# * (at your option) any later version.                                          *
# *                                                                              *
# * This program is distributed in the hope that it will be useful,              *
# * but WITHOUT ANY WARRANTY; without even the implied warranty of               *
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                 *
# * GNU Affero General Public License for more details.                          *
# *                                                                              *
# * You should have received a copy of the GNU Affero General Public License     *
# * along with this program. If not, see <http://www.gnu.org/licenses/>.         *
# *                                                                              *
# *****************************************************************************©*/

import csv
import random


lrange = lambda a,b : range(a, b+1)

MAX_CAPACITY = 50
FISH_FAMILIES = ['cod', 'trout', 'halibut', 'turbot']
COORDS = [[4.62799072265625,60.79335346877629],[4.63897705078125,60.78262987661428],[4.665069580078125,60.77391431472249],[4.665069580078125,60.76251346492816],[4.659576416015625,60.750437557802435],[4.659576416015625,60.73567194135312],[4.670562744140625,60.72157115165579],[4.682922363281249,60.712167185228644],[4.68841552734375,60.6960396955782],[4.68017578125,60.677214063280715],[4.691162109375,60.66577883957096],[4.709014892578125,60.65905033964566],[4.73785400390625,60.6482818152359],[4.74884033203125,60.637509690685484],[4.74884033203125,60.62471311568258],[4.74884033203125,60.61056362329555],[4.73785400390625,60.59775635343141],[4.757080078125,60.58089693937871],[4.772186279296875,60.57077706621161],[4.777679443359375,60.557278971727264],[4.783172607421875,60.54107381861304],[4.7955322265625,60.52891462603976],[4.816131591796875,60.514723127932776],[4.813385009765625,60.497144084718585],[4.8394775390625,60.48835098696415],[4.857330322265624,60.47211131031187],[4.871063232421875,60.46128034246664],[4.862823486328125,60.44570449380767],[4.868316650390625,60.43012117400133],[4.888916015625,60.4111400885279],[4.88616943359375,60.40164539086417],[4.88616943359375,60.38807673063876],[4.895782470703125,60.372465778991284],[4.902648925781249,60.36228069247893],[4.902648925781249,60.346657377050455],[4.910888671875,60.33442521247195],[4.915008544921875,60.31810852494288],[4.91912841796875,60.30178368088174],[4.91912841796875,60.29429873400916],[4.91912841796875,60.28272771685622],[4.91912841796875,60.264341801061505],[4.928741455078125,60.2513973691826],[4.942474365234375,60.24390088477535],[4.95208740234375,60.23367564043361],[4.958953857421875,60.223447204398866],[4.975433349609375,60.212533353918424],[4.983673095703125,60.19888593179811],[4.980926513671875,60.19001206260038],[4.967193603515625,60.17772120545263],[4.983673095703125,60.166108948753305],[4.99053955078125,60.1524422143808],[5.016632080078125,60.14629032974547],[5.033111572265625,60.125775733562556],[5.033111572265625,60.111407903546244],[5.042724609375,60.10387939460457],[5.090789794921875,60.08539303027985],[5.074310302734375,60.07237788969751],[5.064697265625,60.0662110299491],[5.063323974609375,60.05250276915092],[5.063323974609375,60.04221783621823],[5.046844482421875,60.02781354695771],[5.020751953125,60.02163835717667],[5.020751953125,60.0113438097352],[5.03448486328125,60.00310586337268],[5.035858154296875,59.990745095680985],[5.0482177734375,59.98731072945468],[5.044097900390625,59.89926953362341],[5.044097900390625,59.88411389968469],[5.049591064453125,59.87308727761129],[5.064697265625,59.86964070806754],[5.05096435546875,59.85309220083687],[5.05096435546875,59.843435102680886],[5.05096435546875,59.83032455847986],[5.05096435546875,59.81789928058152],[5.05645751953125,59.80685069821466],[5.06744384765625,59.79303481926257],[5.07568359375,59.78336029783953],[5.085296630859375,59.77644820765973],[5.099029541015624,59.76676887616248],[5.099029541015624,59.75086102411168],[5.10040283203125,59.740482255822876],[5.10040283203125,59.72594656451894],[5.10589599609375,59.715560058618614],[5.10589599609375,59.70170636710688],[5.10589599609375,59.689233141261205],[5.10589599609375,59.67606191742629],[5.1251220703125,59.66774058164963],[5.13336181640625,59.65941717985081],[5.13336181640625,59.64623423421001],[5.131988525390625,59.63026899876238],[5.13885498046875,59.6212418104322],[5.153961181640625,59.61012809312675],[5.16357421875,59.603875011292835],[5.16357421875,59.58858480128287],[5.170440673828125,59.576764875587706],[5.22674560546875,59.54684887324843],[5.214385986328125,59.525265028296594],[5.2130126953125,59.513422856578394],[5.21026611328125,59.5001825665577],[5.21026611328125,59.48693708019829],[5.219879150390624,59.47298884774133],[5.22125244140625,59.45903485454137],[5.218505859375,59.44088604851968],[5.19927978515625,59.43180799259034],[5.19927978515625,59.41434334604421],[5.1910400390625,59.39617055437113],[5.19927978515625,59.3758893994925],[5.203399658203125,59.36189532631362],[5.170440673828125,59.35979571744856],[5.181427001953125,59.34159366540317],[5.181427001953125,59.32828599367684],[5.175933837890625,59.32198054010197],[5.16357421875,59.30235609098392],[5.1580810546875,59.28482468904976],[5.159454345703124,59.272196486185756],[5.153961181640625,59.258861634721114],[5.152587890625,59.24481930915727],[5.144348144531249,59.22936606822124],[5.1416015625,59.21179706646391],[5.142974853515625,59.19562559533593],[5.151214599609375,59.17170591220889],[5.170440673828125,59.145656642731254],[5.2020263671875,59.12804455432675],[5.252838134765625,59.11888268785578],[5.294036865234375,59.13438594975983],[5.32012939453125,59.145656642731254],[5.390167236328125,59.08221071409661],[5.376434326171875,59.06456599406611],[5.376434326171875,59.04832484000854],[5.39703369140625,59.039141660136494],[5.532989501953125,58.85851335251062],[5.53436279296875,58.84146431191663],[5.52337646484375,58.8236959680574],[5.524749755859375,58.802361927759456],[5.50140380859375,58.78884358020893],[5.48492431640625,58.77176024522939],[5.476684570312499,58.753956166683714],[5.483551025390625,58.73471751451595],[5.4986572265625,58.72188583269248],[5.500030517578124,58.70548290806038],[5.516510009765625,58.69406761967911],[5.52886962890625,58.68264859034907],[5.5316162109375,58.66694131533384],[5.53436279296875,58.650512507264025],[5.563201904296875,58.635505534704755],[5.571441650390625,58.61763167963463],[5.582427978515624,58.60046417446551],[5.60028076171875,58.59330855904495],[5.6195068359375,58.57541311524959],[5.623626708984375,58.56109017041329],[5.64697265625,58.550344116750814],[5.66070556640625,58.538878026077256],[5.6689453125,58.52023762737372],[5.7073974609375,58.51808617454552],[5.7403564453125,58.51450012664311],[5.767822265625,58.50804431680734],[5.769195556640625,58.49082301741562],[5.774688720703125,58.47574745065048],[5.817260742187499,58.46066541425993],[5.840606689453125,58.44629555365028],[5.851593017578125,58.429043970796265],[5.90240478515625,58.41609973381432],[5.931243896484375,58.42041500811191],[5.950469970703125,58.4110645789247],[5.953216552734374,58.4002725378412],[5.99029541015625,58.398833349314565],[6.013641357421874,58.39163652523205],[6.028747558593749,58.37507825384993],[6.058959960937499,58.36427519285588],[6.068572998046875,58.35058656765361],[6.09466552734375,58.35058656765361],[6.118011474609375,58.3455420520603],[6.142730712890625,58.341217608094105],[6.1688232421875,58.32896214185295],[6.17706298828125,58.32607788501928],[6.208648681640625,58.323193392839634],[6.23748779296875,58.318144965188246],[6.260833740234375,58.3102102653061],[6.29241943359375,58.29938735088811],[6.315765380859374,58.29072663539267],[6.328125,58.286395482881034],[6.345977783203124,58.28206380047333],[6.3555908203125,58.274843152138224],[6.383056640625,58.26617643077586],[6.41326904296875,58.26617643077586],[6.42425537109375,58.26328705248601],[6.442108154296875,58.25967499830377],[6.458587646484375,58.254617503943265],[6.477813720703125,58.24811395080569],[6.488800048828125,58.23799494114732],[6.488800048828125,58.22570369041097],[6.505279541015624,58.216301625414296],[6.527252197265624,58.2119613707987],[6.557464599609374,58.206897069813216],[6.582183837890625,58.2011084128722],[6.604156494140625,58.192423658488615],[6.620635986328125,58.187356571348914],[6.62200927734375,58.172875198236405],[6.606903076171875,58.16056139277947],[6.60552978515625,58.14969272997966],[6.59454345703125,58.13954564958988],[6.5753173828125,58.13302099917688],[6.557464599609374,58.12649515332223],[6.543731689453125,58.11996811189158]]

def main():
	with open('DATA.csv', mode='w') as outfile:
		writer = csv.writer(outfile, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
		writer.writerow(['latitude', 'longitude', 'status', 'volume', 'capacity', 'fish_family', 'timestamp'])

		y = 2020; m = 9; d = 1; h = 0
		for c in COORDS:
			h += 1
			if h >= 24: d += 1; h = 0
			if d >= 30: m += 1; d = 1
			if m >= 12: y += 1; m = 1

			hour = f'0{h}' if len(str(h)) < 2 else f'{h}'
			day = f'0{d}' if len(str(d)) < 2 else f'{d}'
			month = f'0{m}' if len(str(m)) < 2 else f'{m}'

			for i in lrange(0, 100):
				lat = random.uniform(c[1], c[1] - random.uniform(0, 0.5))
				lng = random.uniform(c[0], c[0] - random.uniform(0, 0.5))
				status = random.random() <= 0.95

				if status:
					status_label = 'operational'
					volume = random.randint(0, MAX_CAPACITY)
					capacity = 100 * float(volume) / MAX_CAPACITY
					fish_family = FISH_FAMILIES[ random.randint(0, len(FISH_FAMILIES)-1) ]
					timestamp = f'2020-{month}-{day} {hour}:00:00 +00:00'
				else:
					status_label = 'non-operational'
					volume = 0
					capacity = 0.0
					fish_family = 'none'
					timestamp = ''

				writer.writerow([lat, lng, status_label, volume, capacity, fish_family, timestamp])

		writer.writerow([COORDS[0][1], COORDS[0][0], '', 0, 0.0, '', ''])
		writer.writerow([COORDS[0][1], COORDS[0][0], '', MAX_CAPACITY, 100.0, '', ''])

if __name__ == '__main__':
	main()
